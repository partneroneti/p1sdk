//
// FaceTec Device SDK config file.
// Auto-generated via the FaceTec SDK Configuration Wizard
//

package com.projeto.photoface;

import android.content.Context;
import android.content.res.AssetManager;
import android.graphics.Color;
import android.graphics.Typeface;

import com.facetec.sdk.FaceTecCancelButtonCustomization;
import com.facetec.sdk.FaceTecCustomization;
import com.facetec.sdk.FaceTecSDK;
import com.facetec.sdk.FaceTecSecurityWatermarkImage;
import com.facetec.sdk.FaceTecVocalGuidanceCustomization;

public class Config {


    public static Typeface font;

    public static void initializeFaceTecSDKFromAutogeneratedConfig(Context context,
                                                                   String DeviceKeyIdentifier,
                                                                   String PublicFaceScanEncryptionKey,
                                                                   String ProductionKeyText,
                                                                   FaceTecSDK.InitializeCallback callback) {
        //FaceTecSDK.initializeInDevelopmentMode(context, DeviceKeyIdentifier, PublicFaceScanEncryptionKey, callback);
        FaceTecSDK.initializeInProductionMode(context, ProductionKeyText ,DeviceKeyIdentifier, PublicFaceScanEncryptionKey, callback);
    }

    
    // -------------------------------------
    // This app can modify the customization to demonstrate different look/feel preferences
    // NOTE: This function is auto-populated by the FaceTec SDK Configuration Wizard based on your UI Customizations you picked in the Configuration Wizard GUI.
    public static FaceTecCustomization retrieveConfigurationWizardCustomization() {

        // For Color Customization
        int outerBackgroundColor = Color.parseColor("#283897");
        int frameColor = Color.parseColor("#283897");
        int borderColor = Color.parseColor("#283897");
        int ovalColor = Color.parseColor("#000000");
        int dualSpinnerColor = Color.parseColor("#e32b24");
        int textColor = Color.parseColor("#ffffff");
        int buttonAndFeedbackBarColor =  Color.parseColor("#e32b24");
        int buttonAndFeedbackBarTextColor = Color.parseColor("#ffffff");
        int buttonColorHighlight = Color.parseColor("#396E99");
        int buttonColorDisabled = Color.parseColor("#B9CCDE");

        // For Frame Corner Radius Customization
        int frameCornerRadius = 20;

        // For Cancel Button Customization
        //int cancelButtonImage = com.facetec.sdk.R.drawable.facetec_cancel;
        FaceTecCancelButtonCustomization.ButtonLocation cancelButtonLocation = FaceTecCancelButtonCustomization.ButtonLocation.TOP_LEFT;

        // For image Customization
        //int yourAppLogoImage = com.facetec.sdk.R.drawable.facetec_your_app_logo;
        FaceTecSecurityWatermarkImage securityWatermarkImage = FaceTecSecurityWatermarkImage.FACETEC;
        

        // Set a default customization
        FaceTecCustomization defaultCustomization = new FaceTecCustomization();

        defaultCustomization.vocalGuidanceCustomization.mode = FaceTecVocalGuidanceCustomization.VocalGuidanceMode.NO_VOCAL_GUIDANCE;


        // Set Frame Customization
        defaultCustomization.getFrameCustomization().cornerRadius = frameCornerRadius;
        defaultCustomization.getFrameCustomization().backgroundColor = frameColor;
        defaultCustomization.getFrameCustomization().borderColor = borderColor;

        // Set Overlay Customization
        //defaultCustomization.getOverlayCustomization().brandingImage = -1;
        defaultCustomization.getOverlayCustomization().backgroundColor = outerBackgroundColor;
        defaultCustomization.getOverlayCustomization().showBrandingImage = false;

        // Set Guidance Customization
        defaultCustomization.getGuidanceCustomization().buttonCornerRadius = 30;
        defaultCustomization.getGuidanceCustomization().backgroundColors = frameColor;
        defaultCustomization.getGuidanceCustomization().foregroundColor = textColor;
        defaultCustomization.getGuidanceCustomization().buttonFont = font;
        defaultCustomization.getGuidanceCustomization().headerFont = font;
        defaultCustomization.getGuidanceCustomization().subtextFont = font;
        defaultCustomization.getGuidanceCustomization().readyScreenHeaderFont = font;
        defaultCustomization.getGuidanceCustomization().readyScreenSubtextFont = font;
        defaultCustomization.getGuidanceCustomization().retryScreenHeaderFont = font;
        defaultCustomization.getGuidanceCustomization().retryScreenSubtextFont = font;
        defaultCustomization.getGuidanceCustomization().buttonBackgroundNormalColor = buttonAndFeedbackBarColor;
        defaultCustomization.getGuidanceCustomization().buttonBackgroundDisabledColor = buttonColorDisabled;
        defaultCustomization.getGuidanceCustomization().buttonBackgroundHighlightColor = buttonColorHighlight;
        defaultCustomization.getGuidanceCustomization().buttonTextNormalColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getGuidanceCustomization().buttonTextDisabledColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getGuidanceCustomization().buttonTextHighlightColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getGuidanceCustomization().retryScreenImageBorderColor = borderColor;
        defaultCustomization.getGuidanceCustomization().retryScreenOvalStrokeColor = borderColor;

        // Set Oval Customization
        defaultCustomization.getOvalCustomization().strokeColor = ovalColor;
        defaultCustomization.getOvalCustomization().progressColor1 = dualSpinnerColor;
        defaultCustomization.getOvalCustomization().progressColor2 = dualSpinnerColor;

        // Set Feedback Customization
        defaultCustomization.getFeedbackCustomization().backgroundColors = buttonAndFeedbackBarColor;
        defaultCustomization.getFeedbackCustomization().textColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getFeedbackCustomization().textFont = font;

        // Set Cancel Customization
        //defaultCustomization.getCancelButtonCustomization().customImage = cancelButtonImage;
        defaultCustomization.getCancelButtonCustomization().setLocation(cancelButtonLocation);

        // Set Result Screen Customization
        defaultCustomization.getResultScreenCustomization().backgroundColors = frameColor;
        defaultCustomization.getResultScreenCustomization().foregroundColor = textColor;
        defaultCustomization.getResultScreenCustomization().activityIndicatorColor = buttonAndFeedbackBarColor;
        defaultCustomization.getResultScreenCustomization().resultAnimationBackgroundColor = buttonAndFeedbackBarColor;
        defaultCustomization.getResultScreenCustomization().resultAnimationForegroundColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getResultScreenCustomization().uploadProgressFillColor = buttonAndFeedbackBarColor;
        defaultCustomization.getResultScreenCustomization().messageFont = font;

        // Set Security Watermark Customization
        defaultCustomization.securityWatermarkImage = securityWatermarkImage;

        // Set ID Scan Customization
        defaultCustomization.getIdScanCustomization().selectionScreenBackgroundColors = frameColor;
        defaultCustomization.getIdScanCustomization().selectionScreenForegroundColor = textColor;
        defaultCustomization.getIdScanCustomization().reviewScreenBackgroundColors = frameColor;
        defaultCustomization.getIdScanCustomization().reviewScreenForegroundColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().reviewScreenTextBackgroundColor = buttonAndFeedbackBarColor;
        defaultCustomization.getIdScanCustomization().captureScreenForegroundColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().captureScreenTextBackgroundColor = buttonAndFeedbackBarColor;
        defaultCustomization.getIdScanCustomization().buttonBackgroundNormalColor = buttonAndFeedbackBarColor;
        defaultCustomization.getIdScanCustomization().buttonBackgroundDisabledColor = buttonColorDisabled;
        defaultCustomization.getIdScanCustomization().buttonBackgroundHighlightColor = buttonColorHighlight;
        defaultCustomization.getIdScanCustomization().buttonTextNormalColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().buttonTextDisabledColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().buttonTextHighlightColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().captureScreenBackgroundColor = frameColor;
        defaultCustomization.getIdScanCustomization().captureFrameStrokeColor = borderColor;
        defaultCustomization.getIdScanCustomization().buttonFont = font;
        defaultCustomization.getIdScanCustomization().captureScreenFocusMessageFont = font;
        defaultCustomization.getIdScanCustomization().headerFont = font;
        defaultCustomization.getIdScanCustomization().subtextFont = font;

        
        return defaultCustomization;
    }

    
    public static FaceTecCustomization retrieveLowLightConfigurationWizardCustomization() {
        // For Color Customization
        int outerBackgroundColor = Color.parseColor("#ffffff");
        int frameColor = Color.parseColor("#ffffff");
        int borderColor = Color.parseColor("#ffffff");
        int ovalColor = Color.parseColor("#000000");
        int dualSpinnerColor = Color.parseColor("#e32b24");
        int textColor = Color.parseColor("#ffffff");
        int buttonAndFeedbackBarColor =  Color.parseColor("#e32b24");
        int buttonAndFeedbackBarTextColor = Color.parseColor("#ffffff");
        int buttonColorHighlight = Color.parseColor("#396E99");
        int buttonColorDisabled = Color.parseColor("#B9CCDE");

        // For Frame Corner Radius Customization
        int frameCornerRadius = 20;

        // For Cancel Button Customization
        //int cancelButtonImage = com.facetec.sdk.R.drawable.facetec_cancel;
        FaceTecCancelButtonCustomization.ButtonLocation cancelButtonLocation = FaceTecCancelButtonCustomization.ButtonLocation.TOP_LEFT;

        // For image Customization
        //int yourAppLogoImage = com.facetec.sdk.R.drawable.facetec_your_app_logo;
        FaceTecSecurityWatermarkImage securityWatermarkImage = FaceTecSecurityWatermarkImage.FACETEC;


        // Set a default customization
        FaceTecCustomization defaultCustomization = new FaceTecCustomization();

        defaultCustomization.vocalGuidanceCustomization.mode = FaceTecVocalGuidanceCustomization.VocalGuidanceMode.NO_VOCAL_GUIDANCE;


        // Set Frame Customization
        defaultCustomization.getFrameCustomization().cornerRadius = frameCornerRadius;
        defaultCustomization.getFrameCustomization().backgroundColor = frameColor;
        defaultCustomization.getFrameCustomization().borderColor = borderColor;

        // Set Overlay Customization
        //defaultCustomization.getOverlayCustomization().brandingImage = -1;
        defaultCustomization.getOverlayCustomization().backgroundColor = outerBackgroundColor;
        defaultCustomization.getOverlayCustomization().showBrandingImage = false;

        // Set Guidance Customization
        defaultCustomization.getGuidanceCustomization().buttonCornerRadius = 30;
        defaultCustomization.getGuidanceCustomization().backgroundColors = frameColor;
        defaultCustomization.getGuidanceCustomization().foregroundColor = textColor;
        defaultCustomization.getGuidanceCustomization().buttonFont = font;
        defaultCustomization.getGuidanceCustomization().headerFont = font;
        defaultCustomization.getGuidanceCustomization().subtextFont = font;
        defaultCustomization.getGuidanceCustomization().readyScreenHeaderFont = font;
        defaultCustomization.getGuidanceCustomization().readyScreenSubtextFont = font;
        defaultCustomization.getGuidanceCustomization().retryScreenHeaderFont = font;
        defaultCustomization.getGuidanceCustomization().retryScreenSubtextFont = font;
        defaultCustomization.getGuidanceCustomization().buttonBackgroundNormalColor = buttonAndFeedbackBarColor;
        defaultCustomization.getGuidanceCustomization().buttonBackgroundDisabledColor = buttonColorDisabled;
        defaultCustomization.getGuidanceCustomization().buttonBackgroundHighlightColor = buttonColorHighlight;
        defaultCustomization.getGuidanceCustomization().buttonTextNormalColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getGuidanceCustomization().buttonTextDisabledColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getGuidanceCustomization().buttonTextHighlightColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getGuidanceCustomization().retryScreenImageBorderColor = borderColor;
        defaultCustomization.getGuidanceCustomization().retryScreenOvalStrokeColor = borderColor;

        // Set Oval Customization
        defaultCustomization.getOvalCustomization().strokeColor = ovalColor;
        defaultCustomization.getOvalCustomization().progressColor1 = dualSpinnerColor;
        defaultCustomization.getOvalCustomization().progressColor2 = dualSpinnerColor;

        // Set Feedback Customization
        defaultCustomization.getFeedbackCustomization().backgroundColors = buttonAndFeedbackBarColor;
        defaultCustomization.getFeedbackCustomization().textColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getFeedbackCustomization().textFont = font;

        // Set Cancel Customization
        //defaultCustomization.getCancelButtonCustomization().customImage = cancelButtonImage;
        defaultCustomization.getCancelButtonCustomization().setLocation(cancelButtonLocation);

        // Set Result Screen Customization
        defaultCustomization.getResultScreenCustomization().backgroundColors = frameColor;
        defaultCustomization.getResultScreenCustomization().foregroundColor = textColor;
        defaultCustomization.getResultScreenCustomization().activityIndicatorColor = buttonAndFeedbackBarColor;
        defaultCustomization.getResultScreenCustomization().resultAnimationBackgroundColor = buttonAndFeedbackBarColor;
        defaultCustomization.getResultScreenCustomization().resultAnimationForegroundColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getResultScreenCustomization().uploadProgressFillColor = buttonAndFeedbackBarColor;
        defaultCustomization.getResultScreenCustomization().messageFont = font;

        // Set Security Watermark Customization
        defaultCustomization.securityWatermarkImage = securityWatermarkImage;

        // Set ID Scan Customization
        defaultCustomization.getIdScanCustomization().selectionScreenBackgroundColors = frameColor;
        defaultCustomization.getIdScanCustomization().selectionScreenForegroundColor = textColor;
        defaultCustomization.getIdScanCustomization().reviewScreenBackgroundColors = frameColor;
        defaultCustomization.getIdScanCustomization().reviewScreenForegroundColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().reviewScreenTextBackgroundColor = buttonAndFeedbackBarColor;
        defaultCustomization.getIdScanCustomization().captureScreenForegroundColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().captureScreenTextBackgroundColor = buttonAndFeedbackBarColor;
        defaultCustomization.getIdScanCustomization().buttonBackgroundNormalColor = buttonAndFeedbackBarColor;
        defaultCustomization.getIdScanCustomization().buttonBackgroundDisabledColor = buttonColorDisabled;
        defaultCustomization.getIdScanCustomization().buttonBackgroundHighlightColor = buttonColorHighlight;
        defaultCustomization.getIdScanCustomization().buttonTextNormalColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().buttonTextDisabledColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().buttonTextHighlightColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.getIdScanCustomization().captureScreenBackgroundColor = frameColor;
        defaultCustomization.getIdScanCustomization().captureFrameStrokeColor = borderColor;
        defaultCustomization.getIdScanCustomization().buttonFont = font;
        defaultCustomization.getIdScanCustomization().captureScreenFocusMessageFont = font;
        defaultCustomization.getIdScanCustomization().headerFont = font;
        defaultCustomization.getIdScanCustomization().subtextFont = font;


        return defaultCustomization;
    }
    
            
    // -------------------------------------
    // NOTE: Changing text color for Dynamic Dimming mode so it's readable
    public static FaceTecCustomization retrieveDynamicDimmingConfigurationWizardCustomization() {

        // For Color Customization
       // int textColor = Color.parseColor("#ffffff");
        
        // Set a default customization
        FaceTecCustomization dynamicDimmingCustomization = retrieveConfigurationWizardCustomization();
/*
        // Set Guidance Customization
        dynamicDimmingCustomization.getGuidanceCustomization().foregroundColor = textColor;

        // Set Result Screen Customization
        dynamicDimmingCustomization.getResultScreenCustomization().foregroundColor = textColor;

        // Set ID Scan Customization
        dynamicDimmingCustomization.getIdScanCustomization().selectionScreenForegroundColor = textColor;*/


        
        return dynamicDimmingCustomization;
    }
    

    public static FaceTecCustomization currentCustomization = retrieveConfigurationWizardCustomization();
    public static FaceTecCustomization currentLowLightCustomization = retrieveLowLightConfigurationWizardCustomization();
    public static FaceTecCustomization currentDynamicDimmingCustomization = retrieveDynamicDimmingConfigurationWizardCustomization();
    
    // -------------------------------------
    // Boolean to indicate the FaceTec SDK Configuration Wizard was used to generate this file.
    // In this Sample App, if this variable is true, a "Config Wizard Theme" will be added to this App's Design Showcase,
    // and choosing this option will set the FaceTec SDK UI/UX Customizations to the Customizations that you selected in the
    // Configuration Wizard.
    public static boolean wasSDKConfiguredWithConfigWizard = true;

}
