
plugins {
        id 'com.android.library'
        id 'maven-publish'
    //    id 'signing'
    }

group 'br.com.partner1'
version '1.0'

android {
    compileSdk 34

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    repositories {
        maven { url "https://maven-sdk.unico.run/sdk-mobile" }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.projeto.photoface'
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
        singleVariant('debug') {
            withSourcesJar()
        }
    }
}



dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.otaliastudios:cameraview:2.7.2'
    implementation 'io.unico:capture:5.29.0'

}

// Adicione tarefas para gerar JARs de fontes e Javadocs
tasks.register("sourcesJar", Jar) {
    from android.sourceSets.getByName("main").java.srcDirs
    archiveClassifier.set("sources")
}

tasks.register("javadoc", Javadoc) {
    source = android.sourceSets.getByName("main").java.srcDirs
    classpath += files(android.bootClasspath.join(File.pathSeparator))
}

tasks.register("javadocJar", Jar) {
    dependsOn tasks.named("javadoc")
    archiveClassifier.set("javadoc")
    from tasks.named("javadoc").get().destinationDir
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.github.partneroneti'
            artifactId = 'photoface'
            version = project.version
            afterEvaluate {
                from components.release
            }
        }
    }
}
